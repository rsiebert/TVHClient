plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.firebase-perf'
    id 'com.google.firebase.crashlytics'
}

apply from: '../signing.gradle'

def appProperties = new Properties()
appProperties.load(new FileInputStream(rootProject.file("tvhclient.properties")))

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 232
        versionName "2.4.5"

        // Define the apk naming convention
        applicationId "org.tvheadend.tvhclient"
        setProperty("archivesBaseName", "${applicationId}-${versionName}-${versionCode}")

        // Set the default values for these build config fields
        buildConfigField "String", "DEVELOPER_EMAIL", "\"${appProperties['developerEmail']}\""
        buildConfigField "Integer", "BUILD_VERSION", "$versionCode"

        // Include the build time and git commit hash in the crash reports
        def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
        def buildTime = new GregorianCalendar().format("yyyy.MM.dd HH:mm:ss")
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""
        buildConfigField "String", "GIT_SHA", "\"${gitSha}\""

        // The cast ID that the app shall use
        buildConfigField "String", "CAST_ID", "\"${appProperties['castId']}\""

        // Support vector drawable and animated vector drawable on devices
        // running platform versions lower than Android 5.0 (API level 21)
        vectorDrawables.useSupportLibrary = true

        multiDexEnabled true

        lintOptions {
            // Do not check for lint errors to reduce the build time.
            // Lint checks will be done manually before a release
            checkReleaseBuilds false
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        dataBinding = true
        viewBinding true
    }

    compileOptions {
        sourceCompatibility = rootProject.ext.javaCompatibility
        targetCompatibility = rootProject.ext.javaCompatibility
    }

    kotlinOptions.jvmTarget = JavaVersion.VERSION_1_8.toString()
    testOptions.unitTests.includeAndroidResources = true

    buildTypes {
        release {
            // Reduce the apk file size by enabling proguard
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            initWith buildTypes.release
            buildConfigField "Boolean", "OVERRIDE_UNLOCKED", "true"
        }
    }
}

dependencies {
    // Dependency on local binaries
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    def fragment_version = '1.2.5'
    def lifecycle_version = '2.2.0'
    def material_dialogs_version = '3.3.0'
    def dagger_version = '2.32'

    // AndroidX libraries
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation 'androidx.work:work-runtime:2.5.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"

    // Misc stuff like logging, image loading, billing, casting
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.android.billingclient:billing:3.0.3'
    implementation 'com.google.android.gms:play-services-cast-framework:19.0.0'
    implementation 'com.google.android.datatransport:transport-backend-cct:2.3.3'
    implementation 'androidx.mediarouter:mediarouter:1.2.2'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.2-native-mt'

    // Material navigation drawer and dialogs
    implementation "com.afollestad.material-dialogs:core:$material_dialogs_version"
    implementation "com.afollestad.material-dialogs:input:$material_dialogs_version"
    implementation "com.afollestad.material-dialogs:files:$material_dialogs_version"
    implementation "com.afollestad.material-dialogs:datetime:$material_dialogs_version"
    implementation "com.afollestad.material-dialogs:lifecycle:${material_dialogs_version}"
    //noinspection GradleDependency
    implementation 'com.mikepenz:materialdrawer:7.0.0-rc08'

    // Firebase Crash Reporting and Performance Monitoring
    implementation 'com.google.firebase:firebase-analytics-ktx:18.0.2'
    implementation 'com.google.firebase:firebase-crashlytics:17.4.0'
    implementation 'com.google.firebase:firebase-perf:19.1.1'

    // Dependency injection
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // App data access via browser
    implementation('com.facebook.stetho:stetho:1.5.1') {
        exclude group: "com.google.code.findbugs", module: "jsr305"
    }

    // Use multidex because the method count is over 64k
    implementation 'androidx.multidex:multidex:2.0.1'

    // ----------------------------------------------------------------------------
    // Required internal libraries for the application
    def exoplayer_version = '2.11.7'

    implementation "org.tvheadend.tvhclient.exoplayer:exoplayer-ui:$exoplayer_version"
    implementation "org.tvheadend.tvhclient.exoplayer:exoplayer-core:$exoplayer_version"
    implementation "org.tvheadend.tvhclient.exoplayer:exoplayer-dash:$exoplayer_version"
    implementation "org.tvheadend.tvhclient.exoplayer:extension-ffmpeg:$exoplayer_version"
    //implementation "org.tvheadend.tvhclient.htsp:htsp:1.2.0"
    //implementation "org.tvheadend.tvhclient.data:data:2.1.3"
    implementation project(':htsp')
    implementation project(':data')

    // ----------------------------------------------------------------------------
    // Define versions for testing dependencies
    def junit_version = '4.13.2'
    def androidx_junit_version = '1.1.2'
    def androidx_test_version = '1.3.0'
    def espresso_version = '3.3.0'

    // Required dependencies for unit testing
    testImplementation "junit:junit:$junit_version"
    testImplementation "androidx.test:core:$androidx_test_version"
    testImplementation "androidx.test:runner:$androidx_test_version"
    testImplementation "androidx.test:rules:$androidx_test_version"
    testImplementation "androidx.test.ext:junit:$androidx_junit_version"
    testImplementation 'org.robolectric:robolectric:4.5.1'

    // Required dependencies for UI Testing
    androidTestImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test:core:$androidx_test_version"
    androidTestImplementation "androidx.test:runner:$androidx_test_version"
    androidTestImplementation "androidx.test:rules:$androidx_test_version"
    androidTestImplementation "androidx.test.ext:junit:$androidx_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espresso_version"
    androidTestImplementation 'com.google.truth:truth:1.1.2'
}

apply plugin: 'com.google.gms.google-services'